plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "2.2.4"
}

group = 'com.ikoylinskyi'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
}

test {
    useJUnitPlatform()
}

/**
 * Install local node, npm and yarn
 */
node {
    version = '12.18.4'
    npmVersion = '6.13.4'
    yarnVersion = '1.22.4'
    download = true
    workDir = file("${project.projectDir}/frontend/node")
    yarnWorkDir = file("${project.projectDir}/frontend/yarn")
    nodeModulesDir = file("${project.projectDir}/frontend")
}

/**
 * Runs "yarn run build" to build the angular app.
 */
yarn {
    args = ['--production', '--frozen-lockfile']
}

task yarnBuild(type: YarnTask) {
    dependsOn yarn_install

    args = ['run', 'build', '--prod']
}

bootRun {
    dependsOn yarnBuild
}

